@{
    ViewBag.Title = "Stock List";
}
<div class="container-fluid">
    <div class="row">
        <div>
            <div id="grid"  align=center style="width:1400px;"/>
        </div>
    </div>
</div>
<script>
    $.getScript('http://localhost:8088/Nab/signalr/hubs', function () {
        $.connection.hub.url = "http://localhost:8088/Nab/signalr";
        var ticker = $.connection.Ticker;

        $("#notification").kendoNotification({
            width: "100%",
            position: {
                top: 0,
                left: 0
            }
        });

        $.connection.hub.start().then(init);

        function init() {
            return ticker.server.getAllStocks().done(function (stocks) {
            });
        }


        $("#grid").kendoGrid({
            height: 550,
            editable: false,
            sortable: true,
            filterable: true,
            pageable: true,
            columns: [
                { field: "Symbol" },
                { field: "Price" }
            ],
            dataSource: {
                type: "signalr",
                autoSync: true,
                // Handle the push event to display notifications when push updates arrive
                push: function (e) {
                    var notification = $("#notification").data("kendoNotification");
                    notification.success(e.type);
                },
                schema: {
                    model: {
                        id: "Symbol",
                        fields: {
                            "Symobol": { editable: false, nullable: true },
                            "Price": { type: "number" }
                        }
                    }
                },
            sort: [{ field: "CreatedAt", dir: "desc" }],
            //transport: {
            //    signalr: {
            //        promise: hubStart,
            //        hub: hub,
            //        server: {
            //            read: "read",
            //            update: "update",
            //            destroy: "destroy",
            //            create: "create"
            //        },
            //        client: {
            //            read: "read",
            //            update: "update",
            //            destroy: "destroy",
            //            create: "create"
            //        }
            //    }
            //}
            }
        });
    });

</script>